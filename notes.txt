== Communication with the server ==

To communicate to/from server we need the following information:
- which bin level
- which sensor
- date range
- date and time have to be stored in all of this somehow
  - this will affect how rendering is being done perhaps
  - xScale will be affected
- have to choose whether to render based on what we have, or to request more data
  - the default rendering should be in the client, then requested to the server
- when to free up ram by deleting things? Otherwise browsing for a long time will get ridiculous.
  - only delete data lower than a certain level?


== How data should be stored and shown ==

Data is initialized
- binData contains a nice chunk of data
- renderData is empty

The plot is formed, and its scales are set
- renderData is checked to see if it contains the data for the current scale's level
- if it is not all there, request it from binData
- if binData does not have it, request it from the server
  - do this asynchronously
  - activate some sort of loading animation
  - perhaps request more than the required data (one level more detail?) to reduce the number of loads
  - when new data comes in, put what is necessary in renderData, and update the plot

MORE SPECIFICALLY:
binData is stored outside of my()
in my() we make renderData each time based on the current scale

